{
	"info": {
		"_postman_id": "2b8fb7f1-10c9-4d4f-96c4-9f26e6d6b83c",
		"name": "Test Explore With Me - feature rating Copy 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44812462"
	},
	"item": [
		{
			"name": "Добавление категории",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"// Сохраняем ID категории",
							"var response = pm.response.json();",
							"pm.environment.set(\"category_id\", response.id);",
							"console.log(\"Category ID saved: \" + pm.environment.get(\"category_id\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Концерты\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/admin/categories",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление пользователя 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"// Сохраняем ID пользователя 1",
							"var response = pm.response.json();",
							"pm.environment.set(\"user1_id\", response.id);",
							"console.log(\"User 1 ID saved: \" + pm.environment.get(\"user1_id\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"ivan.petrov@practicummail.ru\",\n  \"name\": \"Иван Петров\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/admin/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление пользователя 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"// Сохраняем ID пользователя 2",
							"var response = pm.response.json();",
							"pm.environment.set(\"user2_id\", response.id);",
							"console.log(\"User 2 ID saved: \" + pm.environment.get(\"user2_id\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"ivan2.petrov@practicummail.ru\",\n  \"name\": \"Иван Петров\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/admin/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);  ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"// Сохраняем ID события",
							"var response = pm.response.json();",
							"pm.environment.set(\"event_id\", response.id);",
							"console.log(\"Event ID saved: \" + pm.environment.get(\"event_id\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\n  \"category\": {{category_id}},\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\n  \"eventDate\": \"2025-12-31 15:10:05\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"title\": \"Сплав на байдарках\",\n  \"paid\": true,\n  \"participantLimit\": 10,\n  \"requestModeration\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user1_id}}/events",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user1_id}}",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Опубликование события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;    ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"stateAction\": \"PUBLISH_EVENT\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/admin/events/{{event_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"admin",
						"events",
						"{{event_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка на событие",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;  ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json; ",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Рейтинг события должен измениться\", function () {",
							"    pm.expect(response.eventRating).to.equal(1, 'Рейтинг события должен был увеличиться на 1');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/users/{{user1_id}}/events/{{event_id}}/like/{{user2_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user1_id}}",
						"events",
						"{{event_id}}",
						"like",
						"{{user2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление дизлайка на событие",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;  ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json; ",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Рейтинг события должен измениться\", function () {",
							"    pm.expect(response.eventRating).to.equal(-1, 'Рейтинг события должен был уменьшиться');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/users/{{user1_id}}/events/{{event_id}}/dislike/{{user2_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user1_id}}",
						"events",
						"{{event_id}}",
						"dislike",
						"{{user2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление дизлайка",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;  ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json; ",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Рейтинг события должен измениться\", function () {",
							"    pm.expect(response.eventRating).to.equal(0, 'Рейтинг события должен был увеличиться');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/{{user1_id}}/events/{{event_id}}/dislike/{{user2_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user1_id}}",
						"events",
						"{{event_id}}",
						"dislike",
						"{{user2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка на событие повторно",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;  ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json; ",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Рейтинг события должен измениться\", function () {",
							"    pm.expect(response.eventRating).to.equal(1, 'Рейтинг события должен был увеличиться');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/users/{{user1_id}}/events/{{event_id}}/like/{{user2_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user1_id}}",
						"events",
						"{{event_id}}",
						"like",
						"{{user2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление лайка",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;  ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json; ",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Рейтинг события должен измениться\", function () {",
							"    pm.expect(response.eventRating).to.equal(0, 'Рейтинг события должен был уменьшиться');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/{{user1_id}}/events/{{event_id}}/like/{{user2_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user1_id}}",
						"events",
						"{{event_id}}",
						"like",
						"{{user2_id}}"
					]
				}
			},
			"response": []
		}
	]
}