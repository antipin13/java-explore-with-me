{
	"info": {
		"_postman_id": "77a52921-a0d3-4ca9-b955-ad501fd94a83",
		"name": "Test Explore With Me - feature rating с переменными",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44812462"
	},
	"item": [
		{
			"name": "Добавление категории",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Сохраняем ID категории в коллекцию\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"categoryId\", responseData.id);\r",
							"console.log(\"Category ID saved:\", responseData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Концерты\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление пользователя 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Сохраняем ID первого пользователя в коллекцию\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"userId1\", responseData.id);\r",
							"console.log(\"User 1 ID saved:\", responseData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"ivan.petrov@practicummail.ru\",\r\n  \"name\": \"Иван Петров\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление пользователя 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Сохраняем ID второго пользователя в коллекцию\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"userId2\", responseData.id);\r",
							"console.log(\"User 2 ID saved:\", responseData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"ivan2.petrov@practicummail.ru\",\r\n  \"name\": \"Иван Петров\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Сохраняем ID события в коллекцию\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"eventId\", responseData.id);\r",
							"console.log(\"Event ID saved:\", responseData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\r\n  \"category\": {{categoryId}},\r\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\r\n  \"eventDate\": \"2025-12-31 15:10:05\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"title\": \"Сплав на байдарках\",\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId1}}/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId1}}",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Опубликование события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/{{eventId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"{{eventId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка на событие",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"pm.test(\"Рейтинг события должен измениться\", function () {\r",
							"    pm.expect(response.eventRating).to.equal(1, 'Рейтинг события должен был увеличиться на 1');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId1}}/events/{{eventId}}/likes/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId1}}",
						"events",
						"{{eventId}}",
						"likes",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление дизлайка на событие",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"pm.test(\"Рейтинг события должен измениться\", function () {\r",
							"    pm.expect(response.eventRating).to.equal(-1, 'Рейтинг события должен был уменьшиться');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/{{userId1}}/events/{{eventId}}/dislikes/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId1}}",
						"events",
						"{{eventId}}",
						"dislikes",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление дизлайка",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"pm.test(\"Рейтинг события должен измениться\", function () {\r",
							"    pm.expect(response.eventRating).to.equal(0, 'Рейтинг события должен был увеличиться');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/{{userId1}}/events/{{eventId}}/dislikes/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId1}}",
						"events",
						"{{eventId}}",
						"dislikes",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка на событие повторно",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"pm.test(\"Рейтинг события должен измениться\", function () {\r",
							"    pm.expect(response.eventRating).to.equal(1, 'Рейтинг события должен был увеличиться');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId1}}/events/{{eventId}}/likes/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId1}}",
						"events",
						"{{eventId}}",
						"likes",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление лайка",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"pm.test(\"Рейтинг события должен измениться\", function () {\r",
							"    pm.expect(response.eventRating).to.equal(0, 'Рейтинг события должен был уменьшиться');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/{{userId1}}/events/{{eventId}}/likes/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId1}}",
						"events",
						"{{eventId}}",
						"likes",
						"{{userId2}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId1",
			"value": ""
		},
		{
			"key": "userId2",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "eventId",
			"value": "",
			"type": "default"
		}
	]
}